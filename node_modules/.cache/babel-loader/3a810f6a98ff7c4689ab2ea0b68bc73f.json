{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anubh\\\\Downloads\\\\RecipeApp\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Home1 from './Home1';\nimport '../style/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [response, setResponse] = useState(null);\n  const [city, setCity] = useState('');\n  const [toggle, setToggle] = useState(false);\n  useEffect(() => {\n    getCoords();\n  }, [city]);\n\n  const getCoords = async () => {\n    try {\n      const coords = await geolocation();\n      let {\n        latitude: lat,\n        longitude: lon\n      } = coords.coords;\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=4503811c206df3e95177b13dae8d0921`);\n      const weatherData = response.data;\n      setResponse(weatherData);\n      setCity(weatherData.name);\n    } catch (err) {\n      document.querySelector('.loader').classList.add('hidden');\n      alert('Something went wrong');\n    }\n  };\n\n  const geolocation = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Home1, {\n      data: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"/gDM472Mx+Ms24rrljfR1H5TizI=\");\n\n_c = App;\nexport default A[p];\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/anubh/Downloads/RecipeApp/src/components/App.js"],"names":["React","useEffect","axios","useState","Home1","App","response","setResponse","city","setCity","toggle","setToggle","getCoords","coords","geolocation","latitude","lat","longitude","lon","get","weatherData","data","name","err","document","querySelector","classList","add","alert","Promise","resolve","reject","navigator","getCurrentPosition","A","p"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,oBAAP;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBJ,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAeN,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAmBR,QAAQ,CAAC,KAAD,CAAjC;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACXW,IAAAA,SAAS;AAEX,GAHQ,EAGP,CAACJ,IAAD,CAHO,CAAT;;AAKA,QAAMI,SAAS,GAAC,YAAU;AACtB,QAAG;AACH,YAAMC,MAAM,GAAC,MAAMC,WAAW,EAA9B;AACA,UAAI;AAACC,QAAAA,QAAQ,EAACC,GAAV;AAAcC,QAAAA,SAAS,EAACC;AAAxB,UAA6BL,MAAM,CAACA,MAAxC;AACA,YAAMP,QAAQ,GAAC,MAAMJ,KAAK,CAACiB,GAAN,CAAW,uDAAsDH,GAAI,QAAOE,GAAI,yCAAhF,CAArB;AACA,YAAME,WAAW,GAACd,QAAQ,CAACe,IAA3B;AACAd,MAAAA,WAAW,CAACa,WAAD,CAAX;AACAX,MAAAA,OAAO,CAACW,WAAW,CAACE,IAAb,CAAP;AACC,KAPD,CAOC,OAAMC,GAAN,EAAU;AACPC,MAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,SAAlC,CAA4CC,GAA5C,CAAgD,QAAhD;AACAC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;AACJ,GAZD;;AAgBA,QAAMd,WAAW,GAAC,MAAI;AAClB,WAAO,IAAIe,OAAJ,CAAY,UAASC,OAAT,EAAiBC,MAAjB,EAAwB;AAC3CC,MAAAA,SAAS,CAAClB,WAAV,CAAsBmB,kBAAtB,CAAyCH,OAAzC,EAAiDC,MAAjD;AACC,KAFM,CAAP;AAGH,GAJD;;AAMA,sBACI;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEzB;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArCD;;GAAMD,G;;KAAAA,G;AAuCN,eAAe6B,CAAC,CAACC,CAAD,CAAhB","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { useState } from 'react';\r\nimport Home1 from './Home1';\r\nimport '../style/style.css'\r\nconst App = () => {\r\n    const [response,setResponse]=useState(null);\r\n    const [city,setCity]=useState('');\r\n    const [toggle,setToggle]=useState(false)\r\n\r\n    useEffect(()=>{\r\n       getCoords();\r\n     \r\n    },[city])\r\n\r\n    const getCoords=async ()=>{\r\n        try{\r\n        const coords=await geolocation();\r\n        let {latitude:lat,longitude:lon}=coords.coords;\r\n        const response=await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=4503811c206df3e95177b13dae8d0921`);\r\n        const weatherData=response.data;\r\n        setResponse(weatherData);\r\n        setCity(weatherData.name)\r\n        }catch(err){\r\n            document.querySelector('.loader').classList.add('hidden')\r\n            alert('Something went wrong')\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    const geolocation=()=>{\r\n        return new Promise(function(resolve,reject){\r\n        navigator.geolocation.getCurrentPosition(resolve,reject);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <Home1 data={response}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default A[p];"]},"metadata":{},"sourceType":"module"}